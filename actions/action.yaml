name: Detect root CA
description: Detect unsafe root CA from production files

runs:
  using: composite
  steps:
    - name: üîç Check for CA in Docker based files
      shell: bash
      run: |
        echo "Searching for Docker files..."
        exists=$(find . -type f -iname '*docker*' -exec grep -qi 'https://netfree.link/dl/unix-ca.sh' {} \; -print)
        if [ "$exists" ]; then
          echo "Root CA found in [${exists}], failing..."
          exit 1
        else
          echo "No root CA detected"
        fi

    - name: üîç Check for trusted hosts
      shell: bash
      run: |
        exists=$(find . -type f -exec grep -qi 'trusted-host' {} \; -print)
        if [ "$exists" ]; then
          echo "Trusted hosts found in [${exists}], failing..."
          exit 1
        else
          echo "No trusted hosts detected"
        fi

    # - name: üîç Check for export ca-bundle variables
    #   shell: bash
    #   run: |
    #     exists=$(find . -type f -exec grep -qi 'ca-bundle.crt' {} \; -print)
    #     if [ "$exists" ]; then
    #       echo "ca-bundle  found in [${exists}], failing..."
    #       exit 1
    #     else
    #       echo "No ca-bundle detected"
    #     fi    


    - name: üîç Check for export CA variables
      shell: bash
      run: |
        exists=$(grep -rlE '\b(NODE_EXTRA_CA_CERTS|REQUESTS_CA_BUNDLE|SSL_CERT_FILE)\b' . || true)
        if [ -n "$exists" ]; then
          echo "CA variables found in [${exists}], failing..."
          exit 1
        else
          echo "No CA variables detected"
        fi
